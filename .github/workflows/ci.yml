name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Debug Info
      run: |
        pwd
        ls -la
        node --version
        npm --version

    - name: Setup Test Environment
      run: |
        echo "Setting up test database..."
        echo '{"books":[]}' > db.json
        chmod 666 db.json
        echo "Test database created successfully"

    - name: Install Dependencies
      run: |
        npm ci || {
          echo "npm ci failed, falling back to npm install"
          rm -f package-lock.json
          npm install
        }

    - name: Run Tests
      env:
        NODE_ENV: test
      run: |
        echo "Running tests..."
        npm test -- --verbose || {
          echo "Test failed. Debug info:"
          cat npm-debug.log || true
          exit 1
        }

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: backend/coverage/

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install Dependencies
      working-directory: backend
      run: npm ci

    - name: Create production database
      working-directory: backend
      run: |
        echo '{"books":[]}' > db.json
        chmod 666 db.json
    
    - name: Deploy to Production
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        appdir: "backend"
      env:
        NODE_ENV: production
        PORT: ${{ secrets.PORT }}
        HD_APP_BASE: "backend" 