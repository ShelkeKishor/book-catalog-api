version: api.keploy.io/v1beta2
kind: Http

name: book-catalog-api-tests

spec:
  metadata:
    name: book-catalog-api
    description: Comprehensive API tests for book catalog service
  
  tests:
    - name: health-check
      path: /api/books
      method: GET
      expected:
        status: 200
        contentType: application/json
    
    - name: create-book
      path: /api/books
      method: POST
      request:
        body:
          title: "Test Book"
          author: "Test Author"
          published_year: 2024
        headers:
          Content-Type: application/json
      expected:
        status: 201
        contentType: application/json
        schema: "#/components/schemas/Book"
    
    - name: get-book-by-id
      path: /api/books/{id}
      method: GET
      pathParams:
        id: "{{created.id}}"
      expected:
        status: 200
        contentType: application/json
        schema: "#/components/schemas/Book"
    
    - name: update-book
      path: /api/books/{id}
      method: PUT
      pathParams:
        id: "{{created.id}}"
      request:
        body:
          title: "Updated Test Book"
          author: "Updated Test Author"
          published_year: 2024
        headers:
          Content-Type: application/json
      expected:
        status: 200
        contentType: application/json
        schema: "#/components/schemas/Book"
    
    - name: list-books
      path: /api/books
      method: GET
      expected:
        status: 200
        contentType: application/json
        schema:
          type: array
          items:
            $ref: "#/components/schemas/Book"
    
    - name: delete-book
      path: /api/books/{id}
      method: DELETE
      pathParams:
        id: "{{created.id}}"
      expected:
        status: 204

    - name: verify-deletion
      path: /api/books/{id}
      method: GET
      pathParams:
        id: "{{created.id}}"
      expected:
        status: 404
        contentType: application/json
        schema: "#/components/schemas/Error"

  assertions:
    - name: validate-book-schema
      type: schema
      spec:
        schema: "#/components/schemas/Book"
        path: $.body
    
    - name: validate-error-schema
      type: schema
      spec:
        schema: "#/components/schemas/Error"
        path: $.body
    
    - name: validate-response-time
      type: responseTime
      spec:
        threshold: 1000  # 1 second

  components:
    schemas:
      Book:
        type: object
        required:
          - id
          - title
          - author
          - published_year
        properties:
          id:
            type: string
          title:
            type: string
          author:
            type: string
          published_year:
            type: integer
      
      Error:
        type: object
        required:
          - message
        properties:
          message:
            type: string 