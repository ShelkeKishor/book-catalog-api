name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install Dependencies
      working-directory: backend
      run: |
        npm ci
        npm install -g jest

    - name: Setup Database
      working-directory: backend
      run: |
        echo '{"books":[]}' > db.json

    - name: Run Unit Tests
      working-directory: backend
      run: |
        npm test
        echo "Unit tests completed successfully"

    - name: Install Keploy
      run: |
        curl -O https://raw.githubusercontent.com/keploy/keploy/main/keploy.sh
        chmod +x keploy.sh
        sudo ./keploy.sh || echo "Keploy installation failed but continuing..."

    - name: Start Server and Run API Tests
      working-directory: backend
      run: |
        # Start the server in background with proper logging
        node index.js > server.log 2>&1 &
        echo "Server starting..."
        
        # Store server PID
        SERVER_PID=$!
        
        # Wait for server to be ready (up to 30 seconds)
        MAX_RETRIES=30
        RETRY_COUNT=0
        until curl -s http://localhost:3000/api/books > /dev/null; do
          sleep 1
          RETRY_COUNT=$((RETRY_COUNT + 1))
          if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            echo "Server failed to start within 30 seconds"
            cat server.log
            exit 1
          fi
          echo "Waiting for server... (Attempt $RETRY_COUNT/$MAX_RETRIES)"
        done
        
        echo "Server is up and running!"
        
        # Run basic API tests
        echo "Running API health check..."
        curl -v http://localhost:3000/api/books
        
        # Run test book creation
        echo "Testing book creation..."
        curl -X POST http://localhost:3000/api/books \
          -H "Content-Type: application/json" \
          -d '{"title": "Test Book", "author": "Test Author", "published_year": 2024}'
        
        # Run Keploy tests if available
        if command -v keploy &> /dev/null; then
          echo "Running Keploy tests..."
          keploy test -c "node index.js" --delay 5 || echo "Keploy tests failed but continuing..."
        else
          echo "Keploy not available, skipping Keploy tests"
        fi
        
        # Kill the server and show logs
        kill $SERVER_PID || true
        cat server.log

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          backend/coverage/
          backend/server.log
          backend/keploy-test-results/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production

    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Production
      run: |
        echo "Deployment would happen here" 