name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Debug Info
      run: |
        pwd
        ls -la
        node --version
        npm --version

    - name: Install Dependencies
      run: |
        rm -f package-lock.json
        npm install

    - name: Run Tests
      env:
        NODE_ENV: test
      run: |
        echo "Running tests..."
        npm test || {
          echo "Test failed. Debug info:"
          cat npm-debug.log || true
          exit 1
        }

  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: |
        npm install
        npm install -g jest

    - name: Create Database
      run: |
        echo '{"books":[]}' > db.json
        sudo chown $USER:$USER db.json
        sudo chmod 666 db.json
        ls -la db.json

    - name: Run Tests
      run: |
        NODE_ENV=test npm test

    - name: Start Server
      run: |
        node index.js &
        echo $! > server.pid
        sleep 5

    - name: Test API Endpoints
      run: |
        curl -v http://localhost:3000/api/books

    - name: Cleanup
      if: always()
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
        fi

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          backend/coverage/
          backend/*.log

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install Dependencies
      working-directory: backend
      run: npm ci

    - name: Create production database
      working-directory: backend
      run: |
        echo '{"books":[]}' > db.json
        chmod 666 db.json
    
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.DEPLOY_TOKEN }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        appdir: "backend"
      env:
        NODE_ENV: production
        PORT: ${{ secrets.PORT }}
        HD_APP_BASE: "backend" 